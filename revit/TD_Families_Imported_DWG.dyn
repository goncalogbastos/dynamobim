{
  "Uuid": "ae795c53-fe2d-418c-aa47-1ad72b40646e",
  "IsCustomNode": false,
  "Description": "Identifica todos os CAD's importados em cada família do documento. O utilizador tem a opção de exportar os dados para Excel.",
  "Name": "TD_Families_Imported_DWG",
  "ElementResolver": {
    "ResolutionMap": {
      "Revit.ImportInstance": {
        "Key": "Revit.ImportInstance",
        "Value": "BimorphNodes.dll"
      },
      "ImportInstanceReport": {
        "Key": "Revit.ImportInstanceReport",
        "Value": "BimorphNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "6437bb39595e4ad486f90ba2b374a556",
      "Name": "1. Exportar para excel?",
      "Type": "boolean",
      "Type2": "boolean",
      "Value": "false",
      "Description": "Enables selection between True and False",
      "SelectedIndex": 0
    },
    {
      "Id": "daf3c1ed8d42449f9e79301fa121b91e",
      "Name": "2. Diretoria a guardar Excel",
      "Type": "string",
      "Type2": "string",
      "Value": "No file selected.",
      "Description": "Allows you to select a directory on the system and returns its path",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "7a3cd8a134544f7e98b51ffef7bca0ef",
      "Name": "Nome família",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "5e4b377ce771467b90e04a966efb0a97",
      "Name": "Nome DWG Importado",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import sys\r\nimport clr\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n\r\n\r\nfamilies = []\r\nimportedDWG = []\r\nCADS = []\r\n\r\nfamily_collector = FilteredElementCollector(doc).OfClass(Family)\r\n\r\nfor family in family_collector:\r\n    \r\n    try:\r\n        \r\n        family_doc = doc.EditFamily(family)\r\n        import_instance_collector = FilteredElementCollector(family_doc).OfClass(ImportInstance)\r\n        for element in import_instance_collector:\r\n            if not element.IsLinked:\r\n                families.append(family.Name)\r\n                CADS.append(element.Id)\r\n                for param in element.Parameters:            \r\n                    if param.Definition.Name == \"Name\":\r\n                        importedDWG.append(param.AsValueString())\r\n    except:\r\n        pass\r\n\r\n\r\n\r\nOUT = families,importedDWG\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "33d695a654fb432e880ad576effbdc71",
      "NodeType": "PythonScriptNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "041ed4bf13164d7aacb73bec3e061792",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b212aca3d3a64b439df7c4793b1f85b8",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "263e4f50a8e049d2841849c33ac7310e",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "711c82f6939a468fbe3e62f6a13024b7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac73713d17cd4d5b9f5984f5a829f247",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "a[0];\na[1];"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "7a3cd8a134544f7e98b51ffef7bca0ef",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3cf7ecb4abeb4323871243bcae8dce81",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d60b8fd72a94845ab8e8d8c756d5754",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 50.0,
      "WatchHeight": 38.0,
      "Id": "5e4b377ce771467b90e04a966efb0a97",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "83cbe71c4daa4041ac637b721c1043c4",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b8e6e50d6a2435eba74502b3dc14172",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "be6669c5cad749d9ba9b5d794670afdb",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f24cea03ab5049ffa431373be7eba062",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d5b565df79642a7980ccbf9a8d90923",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4673e74fc9304ea88a54d9045d29f31b",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f68860633a1a42a0af73a94d5a0da9c4",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6e11dcd888b9497ca85fe1fcc8c97037",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "61f1421dba884b9ab918482cb670ea16",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "185ba306fc2b44ab8fbf036a7865f757",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ef2f17375a746c29e82a9d5831c9c00",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d60f95119fbd417a9252400d8d94764a",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ae5909b4aa94729b0db45c6d1293ce2",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f2b3a432ace408696b2a4d98f3db2e2",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15542308ed7d42c1a8d3f91c023cf018",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1fdac18fc98421b8d4023b266eb9500",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ApplyFunction, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "08fb2395aa634a2887f78c9bf59c4c39",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d32e5e611778461c912366a02eb9ad7d",
          "Name": "function",
          "Description": "Function to apply.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c16de0472c14d25b629927dabbf0bc7",
          "Name": "argument0",
          "Description": "Argument #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e63335196814768a76ca13849327c74",
          "Name": "argument1",
          "Description": "Argument #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "762012207d90405bb76b8252faf11806",
          "Name": "argument2",
          "Description": "Argument #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "717c529e10df478987275caa53f0ddc1",
          "Name": "argument3",
          "Description": "Argument #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86689a0a87cc41ba887b83760e0dfc12",
          "Name": "argument4",
          "Description": "Argument #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40638aa9bbba4092a467b87734925a28",
          "Name": "argument5",
          "Description": "Argument #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c31201d3ba2a44a19efe75dbfd0bed68",
          "Name": "argument6",
          "Description": "Argument #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "208799282bc44beda3f20247e80da949",
          "Name": "result",
          "Description": "Result of application.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of a function with given arguments"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "162cfaa3c7254dc4b0b9476943dfa388",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abb5cf512f96489e8e8cd63d7b6afc3a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61d8ffc8553e4b8aa3861bfd01dd6b7b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2811fe69e60842ba979ce1435a414cb1",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Sheet1\";\n0;\ntrue;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c76a469f430d4ab6b253718cc9baa33d",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a1ae17dcee924c0ea7ee904021ad1884",
          "Name": "list",
          "Description": "Empty list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Empty",
      "Replication": "Auto",
      "Description": "Returns an Empty List.\n\nList.Empty: var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "0fe8b19e29774d66bbfc650b720f5bdf",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "70d86222337945839bbd020d7ab44f96",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd6a64d77fb448329f7695a49f7f21f3",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ef04d0c9c044babb0606b848b064215",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "538ce1d976874325876c6f50fb64b45b",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "485978bbe2164714ada478ce8e105334",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a1469b5f10954631bc8afdba6c1cf7df",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\"\",\"\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "15298c56e9d74595831e8739bb6233b1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "003991d4775746ddaeff77af6fbc286b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[[\"Nome Familia\",\"Nome DWG Importado\"]];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4618c3e6579047ed95ca37603744c05a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c14d0567f8cf47aba9524bf1a6e62868",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d99fdb456904f648bcb2d5323f9f99f",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "ce6519fbb3524641809744ba020fa8b8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dbc3225d75f247dfbd2457d09fb204c1",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4b2d825f3174498b4d752ff262c10ec",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23a5ba440a0b4c77ab96400285202d74",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6c35b00abf974fc6b1cc3ce669676e5f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3b27eef86b6b49b2b4b012f041466704",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a7c0633958a4872bbc546848496f124",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1394f247718b4f46b15020a0f74d7f87",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0138c77b5d0248a1b5d4207ed3a0df10",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "92e5bd5ace65402fbaf0d02fab63b5da",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "6437bb39595e4ad486f90ba2b374a556",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72c332852d324fe48aca47e8b1f17d49",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "Id": "daf3c1ed8d42449f9e79301fa121b91e",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28fa9c1284ac4569a7138f363a953be8",
          "Name": "",
          "Description": "Directory path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system and returns its path",
      "HintPath": "",
      "InputValue": "No file selected."
    }
  ],
  "Connectors": [
    {
      "Start": "041ed4bf13164d7aacb73bec3e061792",
      "End": "1ef04d0c9c044babb0606b848b064215",
      "Id": "3605c4dfb89441099d84962cc562fa2b",
      "IsHidden": "False"
    },
    {
      "Start": "041ed4bf13164d7aacb73bec3e061792",
      "End": "c14d0567f8cf47aba9524bf1a6e62868",
      "Id": "7263c973070e437996bf597fac134580",
      "IsHidden": "False"
    },
    {
      "Start": "711c82f6939a468fbe3e62f6a13024b7",
      "End": "3cf7ecb4abeb4323871243bcae8dce81",
      "Id": "9b4ea2b068aa46df970694a971bfdf6e",
      "IsHidden": "False"
    },
    {
      "Start": "ac73713d17cd4d5b9f5984f5a829f247",
      "End": "83cbe71c4daa4041ac637b721c1043c4",
      "Id": "5d27370d49114e1597dd2b569b40810b",
      "IsHidden": "False"
    },
    {
      "Start": "f68860633a1a42a0af73a94d5a0da9c4",
      "End": "d32e5e611778461c912366a02eb9ad7d",
      "Id": "95171b0337ce45ed8176c98b863ef6de",
      "IsHidden": "False"
    },
    {
      "Start": "d1fdac18fc98421b8d4023b266eb9500",
      "End": "6d5b565df79642a7980ccbf9a8d90923",
      "Id": "a4451486970a49728488bd48041d5b30",
      "IsHidden": "False"
    },
    {
      "Start": "abb5cf512f96489e8e8cd63d7b6afc3a",
      "End": "0e63335196814768a76ca13849327c74",
      "Id": "f51d269731af4b629adf8fa08d1e9316",
      "IsHidden": "False"
    },
    {
      "Start": "61d8ffc8553e4b8aa3861bfd01dd6b7b",
      "End": "762012207d90405bb76b8252faf11806",
      "Id": "6a8fcf479ecd402bb0e9500df031984f",
      "IsHidden": "False"
    },
    {
      "Start": "61d8ffc8553e4b8aa3861bfd01dd6b7b",
      "End": "717c529e10df478987275caa53f0ddc1",
      "Id": "fa56cf793dc445289394ebd0eb8f4f1a",
      "IsHidden": "False"
    },
    {
      "Start": "2811fe69e60842ba979ce1435a414cb1",
      "End": "40638aa9bbba4092a467b87734925a28",
      "Id": "73047ca9e0c54a89a745366de627b92c",
      "IsHidden": "False"
    },
    {
      "Start": "2811fe69e60842ba979ce1435a414cb1",
      "End": "c31201d3ba2a44a19efe75dbfd0bed68",
      "Id": "b3b7de8870904ef2ae6fca13e1e2c98f",
      "IsHidden": "False"
    },
    {
      "Start": "a1ae17dcee924c0ea7ee904021ad1884",
      "End": "4673e74fc9304ea88a54d9045d29f31b",
      "Id": "898dbb3d662c4d7395af6633ef38ded2",
      "IsHidden": "False"
    },
    {
      "Start": "538ce1d976874325876c6f50fb64b45b",
      "End": "263e4f50a8e049d2841849c33ac7310e",
      "Id": "1801dbf08e764ca3bf9e4ee4b3cf7bd7",
      "IsHidden": "False"
    },
    {
      "Start": "a1469b5f10954631bc8afdba6c1cf7df",
      "End": "cd6a64d77fb448329f7695a49f7f21f3",
      "Id": "d0335f2b19f04f268810f6f49ab80ab4",
      "IsHidden": "False"
    },
    {
      "Start": "003991d4775746ddaeff77af6fbc286b",
      "End": "dbc3225d75f247dfbd2457d09fb204c1",
      "Id": "4677d3f3528a4a7f81f10fcb16526b85",
      "IsHidden": "False"
    },
    {
      "Start": "0d99fdb456904f648bcb2d5323f9f99f",
      "End": "e4b2d825f3174498b4d752ff262c10ec",
      "Id": "f9d44bfb30c04361819602f4e5bc7bd4",
      "IsHidden": "False"
    },
    {
      "Start": "23a5ba440a0b4c77ab96400285202d74",
      "End": "3b27eef86b6b49b2b4b012f041466704",
      "Id": "102c7dba4a3e4638be8612681e552e3a",
      "IsHidden": "False"
    },
    {
      "Start": "1394f247718b4f46b15020a0f74d7f87",
      "End": "86689a0a87cc41ba887b83760e0dfc12",
      "Id": "c9e1269d0f8a4d26b6d73e5ff11d31fe",
      "IsHidden": "False"
    },
    {
      "Start": "92e5bd5ace65402fbaf0d02fab63b5da",
      "End": "7a7c0633958a4872bbc546848496f124",
      "Id": "dfa2ae0d3e3e49ed9724159b0cd37393",
      "IsHidden": "False"
    },
    {
      "Start": "72c332852d324fe48aca47e8b1f17d49",
      "End": "70d86222337945839bbd020d7ab44f96",
      "Id": "9c44d7e72e5b4aaeb6e59f2cb6f671a0",
      "IsHidden": "False"
    },
    {
      "Start": "72c332852d324fe48aca47e8b1f17d49",
      "End": "f24cea03ab5049ffa431373be7eba062",
      "Id": "d233238171c140948e8ea550a074d70d",
      "IsHidden": "False"
    },
    {
      "Start": "28fa9c1284ac4569a7138f363a953be8",
      "End": "4c16de0472c14d25b629927dabbf0bc7",
      "Id": "efc75bd2b4644b29b4c11440a7c0e9ca",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.19",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.1",
      "Data": {}
    }
  ],
  "Author": "Goncalo Bastos",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.19.3.6394",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "33d695a654fb432e880ad576effbdc71",
        "Name": "Get imported DWGs in families",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2511.1246267424995,
        "Y": 3479.0564401372976
      },
      {
        "Id": "b212aca3d3a64b439df7c4793b1f85b8",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1146.9185148923746,
        "Y": 2801.1990389105176
      },
      {
        "Id": "7a3cd8a134544f7e98b51ffef7bca0ef",
        "Name": "Nome família",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -397.2477164528741,
        "Y": 2532.4324383922394
      },
      {
        "Id": "5e4b377ce771467b90e04a966efb0a97",
        "Name": "Nome DWG Importado",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -397.38789053754817,
        "Y": 2889.8396676183879
      },
      {
        "Id": "be6669c5cad749d9ba9b5d794670afdb",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1642.5067635380897,
        "Y": 4030.0298783341759
      },
      {
        "Id": "6e11dcd888b9497ca85fe1fcc8c97037",
        "Name": "Data.ExportToExcel",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1977.5067635380897,
        "Y": 3905.0298783341759
      },
      {
        "Id": "08fb2395aa634a2887f78c9bf59c4c39",
        "Name": "Export to Excel",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -388.2584599876061,
        "Y": 3864.6163879828646
      },
      {
        "Id": "162cfaa3c7254dc4b0b9476943dfa388",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -775.94579171641612,
        "Y": 4164.1787011118877
      },
      {
        "Id": "c76a469f430d4ab6b253718cc9baa33d",
        "Name": "List.Empty",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1977.5067635380897,
        "Y": 4257.0298783341768
      },
      {
        "Id": "0fe8b19e29774d66bbfc650b720f5bdf",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1439.9185148923746,
        "Y": 2801.1990389105176
      },
      {
        "Id": "485978bbe2164714ada478ce8e105334",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1710.9185148923746,
        "Y": 2835.0265389105175
      },
      {
        "Id": "15298c56e9d74595831e8739bb6233b1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1673.2143903078131,
        "Y": 3605.7760870993552
      },
      {
        "Id": "4618c3e6579047ed95ca37603744c05a",
        "Name": "List.Transpose",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1673.2143903078131,
        "Y": 3753.9485870993553
      },
      {
        "Id": "ce6519fbb3524641809744ba020fa8b8",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1028.2143903078131,
        "Y": 3662.9485870993553
      },
      {
        "Id": "6c35b00abf974fc6b1cc3ce669676e5f",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -774.21439030781312,
        "Y": 3734.9485870993553
      },
      {
        "Id": "0138c77b5d0248a1b5d4207ed3a0df10",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1028.2143903078131,
        "Y": 3840.7760870993552
      },
      {
        "Id": "6437bb39595e4ad486f90ba2b374a556",
        "Name": "1. Exportar para excel?",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3382.9332923570246,
        "Y": 3358.0605254629813
      },
      {
        "Id": "daf3c1ed8d42449f9e79301fa121b91e",
        "Name": "2. Diretoria a guardar Excel",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3385.7663963990153,
        "Y": 3550.7116003183478
      }
    ],
    "Annotations": [
      {
        "Id": "270201e00b654f2cbd00c66e700fcda2",
        "Title": "Input",
        "DescriptionText": "Exportar para excel: True\r\nNão exportar: False",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6437bb39595e4ad486f90ba2b374a556",
          "daf3c1ed8d42449f9e79301fa121b91e"
        ],
        "HasNestedGroups": false,
        "Left": -3395.7663963990153,
        "Top": 3276.0605254629813,
        "Width": 295.0,
        "Height": 415.65107485536646,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 3358.0605254629813,
        "InitialHeight": 337.65107485536646,
        "TextblockHeight": 72.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "a4d1e21e81194e5abba37c8531c11a51",
        "Title": "Obter DWG's importados em famílias",
        "DescriptionText": "Nó de Python que obtém todos os CAD's que estão importados diretamente nos ficheiros .rfa",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "33d695a654fb432e880ad576effbdc71"
        ],
        "HasNestedGroups": false,
        "Left": -2521.1246267424995,
        "Top": 3310.0564401372976,
        "Width": 322.0,
        "Height": 301.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 3479.0564401372976,
        "InitialHeight": 145.0,
        "TextblockHeight": 159.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "50d8601e6a534b409b847f788577fb5b",
        "Title": "Output",
        "DescriptionText": "Folha de excel com os dados",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "08fb2395aa634a2887f78c9bf59c4c39"
        ],
        "HasNestedGroups": false,
        "Left": -398.2584599876061,
        "Top": 3791.6163879828646,
        "Width": 225.0,
        "Height": 445.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 3864.6163879828646,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "8f22133b50ca4d2f8ea7bf52cb8e0896",
        "Title": "Preparação dos dados para exportar para Excel",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "be6669c5cad749d9ba9b5d794670afdb",
          "6e11dcd888b9497ca85fe1fcc8c97037",
          "162cfaa3c7254dc4b0b9476943dfa388",
          "c76a469f430d4ab6b253718cc9baa33d",
          "15298c56e9d74595831e8739bb6233b1",
          "4618c3e6579047ed95ca37603744c05a",
          "ce6519fbb3524641809744ba020fa8b8",
          "6c35b00abf974fc6b1cc3ce669676e5f",
          "0138c77b5d0248a1b5d4207ed3a0df10"
        ],
        "HasNestedGroups": false,
        "Left": -1987.5067635380897,
        "Top": 3532.7760870993552,
        "Width": 1418.2923732302766,
        "Height": 856.25379123482162,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 3605.7760870993552,
        "InitialHeight": 796.25379123482162,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3a8013ec2aec4e5e8ff52ee4dd741596",
        "Title": "Output",
        "DescriptionText": "Visualização dos dados caso não sejam exportados para Excel",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7a3cd8a134544f7e98b51ffef7bca0ef",
          "5e4b377ce771467b90e04a966efb0a97"
        ],
        "HasNestedGroups": false,
        "Left": -407.38789053754817,
        "Top": 2450.4324383922394,
        "Width": 297.14017408467407,
        "Height": 575.4072292261485,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 2532.4324383922394,
        "InitialHeight": 502.4072292261485,
        "TextblockHeight": 72.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "1d723b910b004b998bd72019f144d8d2",
        "Title": "Preparação dos dados para visualizar",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b212aca3d3a64b439df7c4793b1f85b8",
          "0fe8b19e29774d66bbfc650b720f5bdf",
          "485978bbe2164714ada478ce8e105334"
        ],
        "HasNestedGroups": false,
        "Left": -1720.9185148923746,
        "Top": 2728.1990389105176,
        "Width": 738.0,
        "Height": 270.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 2801.1990389105176,
        "InitialHeight": 178.82749999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "46f8bdf4b4704a4fb426f295ad883cd9",
        "Title": "Description",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "82471d9d32b34bd6bb4abd7948c2b0e4"
        ],
        "HasNestedGroups": false,
        "Left": -3717.8485419576969,
        "Top": 3285.0436157468407,
        "Width": 314.0,
        "Height": 295.0,
        "FontSize": 36.0,
        "GroupStyleId": "bc688959-ce34-4bf5-90f8-6ddd23f80989",
        "InitialTop": 3358.0436157468407,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "82471d9d32b34bd6bb4abd7948c2b0e4",
        "Title": "Nome da rotina: TD-Familias-Imported-DWG.dyn\nVersão: 1.0\nData: 03/09/2024\nElaborou: GGB\n\nDescrição:\nIdentifica todos os CAD's importados em cada família do documento. O utilizador tem a opção de exportar os dados para Excel.\n\n\nPackages usados:\n•   Esta rotina não usa packages externos.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3707.8485419576969,
        "Top": 3366.0436157468407,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1585.4439657765188,
    "Y": -1007.6318701873211,
    "Zoom": 0.41950040520135812
  }
}