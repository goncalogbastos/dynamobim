{
  "Uuid": "c7ac613d-7975-447a-a908-3e99b7d20e50",
  "IsCustomNode": false,
  "Description": "Identifica todos os CAD's importados no modelo. O utilizador tem a opção de os apagar caso o indique nos INPUT's.",
  "Name": "TD_Clean_Imported_DWGs",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "5ccd2ec12d9a4bf6b23477f5ab34ab51",
      "Name": "Apagar DWG's importados?",
      "Type": "boolean",
      "Type2": "boolean",
      "Value": "false",
      "Description": "Enables selection between True and False",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "7ea8a1d09d2b4018a430f588b5d5b413",
      "Name": "DWG's importados",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    },
    {
      "Id": "d79749d0b70d4646af42526d70571c1d",
      "Name": "DWG's removidos",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import sys\r\nimport clr\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import *\r\n\r\nclr.AddReference('System')\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n\r\ncollector = FilteredElementCollector(doc).OfClass(ImportInstance).ToElements()\r\n\r\n\r\nviews = []\r\nimportedDWG = []\r\nCADS = []\r\n\r\nfor element in collector:\r\n    if not element.IsLinked:\r\n        CADS.append(element)\r\n        if doc.GetElement(element.OwnerViewId):\r\n            views.append(doc.GetElement(element.OwnerViewId))\r\n        else:\r\n            views.append(doc.GetElement(element.LevelId))\r\n        \r\n        typeId = element.GetTypeId()\r\n        famSym = doc.GetElement(typeId)\r\n        \r\n        for param in famSym.Parameters:\r\n            if param.Definition.Name == \"Type Name\":\r\n                importedDWG.append(param.AsValueString())     \r\n        \r\n\r\n\r\nOUT = importedDWG,views,CADS\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "76bbb51a199646d6bf367742bf34d2ac",
      "NodeType": "PythonScriptNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee5d2960dc4b49319511c412346e39fd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "7ea8a1d09d2b4018a430f588b5d5b413",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c7bca2007e9f4ebb8f2bf98bea851894",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02a018c615284d2fa8a1f13d1ef62b65",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "496931820af84a2db7f41ad454c6a3ac",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e66bec85d1da4500a87cbcfed7dc55b4",
          "Name": "element",
          "Description": "The element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b280119469584dc493cba5dc2bc0b40e",
          "Name": "int[]",
          "Description": "The list of element id's deleted, including any dependent elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Delete@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Delete the element and any elements that are totally dependent upon the element.\n\nElement.Delete (element: Element): int[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "5ccd2ec12d9a4bf6b23477f5ab34ab51",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5601581b7404b6082bfda813f4451cc",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "e8f383eb52c5481290afc4abf81ac8d5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "f65e3666046140589cb1c26f822e21d0",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0609ed4d930c4502a3b9a1bb2a1b2e52",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e8216e3e282455893fe0ae94862a32e",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47ddf5461f3540d6ae9d6ffef1e6cea6",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9c0cbe02ca424b6ab854b640164f28ba",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b8993a98c4334be094017eea4d7781f6",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "429887435d064f6a97854d54b87f2c53",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "071a037074be4c19a294a7ad7265bb4c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9aab08234dc4d119466f5e3d83a45bf",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[a[0],a[1]];\n[a[0],a[2]];\n[\"\",\"\"];"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ApplyFunction, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "9f64a2c08709444e95079ac4622d7e94",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "8aa4f485dda54206b0e24111670f7637",
          "Name": "function",
          "Description": "Function to apply.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed2556a7855f465ebdd57110c2836c0b",
          "Name": "argument0",
          "Description": "Argument #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4db6c51577a24783b25103c5be466670",
          "Name": "result",
          "Description": "Result of application.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of a function with given arguments"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "d9a4a14b31954396b999e51fa7a71a50",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b474dbea96cd44b48bdf3bc9a396e8b3",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2c051112d934c9da966e75508890eaf",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff33ce5b6ce944e3af79bfc15a5151bd",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdea0d997b8b43198690713e9606e3d1",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c3eabd768e964bd5ab782c2b92ee6d1b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "d164473b40dd4ef387985658eb598eb3",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3155fe1f4664f39ab67458a9e30ce15",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab93d1a3868e482797b23672737d01e9",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "a[0];\na[1];"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 38.0,
      "Id": "d79749d0b70d4646af42526d70571c1d",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "a51fc86abdee4625925aaaafc2a2cb6e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0a4c9450a3d4da18876ee2f7c87241d",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "ee5d2960dc4b49319511c412346e39fd",
      "End": "b8993a98c4334be094017eea4d7781f6",
      "Id": "a1a18fdd9c1e423caa5d352ede7b4b61",
      "IsHidden": "False"
    },
    {
      "Start": "b280119469584dc493cba5dc2bc0b40e",
      "End": "8aa4f485dda54206b0e24111670f7637",
      "Id": "5d62204ebda24f5cb832f28c7bb8dd87",
      "IsHidden": "False"
    },
    {
      "Start": "b5601581b7404b6082bfda813f4451cc",
      "End": "f65e3666046140589cb1c26f822e21d0",
      "Id": "9e00b69607534032abbc015d4b9458e9",
      "IsHidden": "False"
    },
    {
      "Start": "b5601581b7404b6082bfda813f4451cc",
      "End": "b474dbea96cd44b48bdf3bc9a396e8b3",
      "Id": "6798d1af90ab421d8fdcf9d8c12c21ed",
      "IsHidden": "False"
    },
    {
      "Start": "47ddf5461f3540d6ae9d6ffef1e6cea6",
      "End": "d164473b40dd4ef387985658eb598eb3",
      "Id": "a45abaa8e4244aa09887cad45c0a10f9",
      "IsHidden": "False"
    },
    {
      "Start": "429887435d064f6a97854d54b87f2c53",
      "End": "ff33ce5b6ce944e3af79bfc15a5151bd",
      "Id": "0db136db46464bd7bb56911426a4cfc3",
      "IsHidden": "False"
    },
    {
      "Start": "071a037074be4c19a294a7ad7265bb4c",
      "End": "0609ed4d930c4502a3b9a1bb2a1b2e52",
      "Id": "175b863a41f14a4c82f01744b13e1313",
      "IsHidden": "False"
    },
    {
      "Start": "b9aab08234dc4d119466f5e3d83a45bf",
      "End": "b2c051112d934c9da966e75508890eaf",
      "Id": "6814d18899b44dacb2d8ac7ab64f9560",
      "IsHidden": "False"
    },
    {
      "Start": "b9aab08234dc4d119466f5e3d83a45bf",
      "End": "8e8216e3e282455893fe0ae94862a32e",
      "Id": "14680b12874f4c5a94eb04bae1febb18",
      "IsHidden": "False"
    },
    {
      "Start": "cdea0d997b8b43198690713e9606e3d1",
      "End": "c7bca2007e9f4ebb8f2bf98bea851894",
      "Id": "703cb84b499c45b1936708ee022a15dd",
      "IsHidden": "False"
    },
    {
      "Start": "b3155fe1f4664f39ab67458a9e30ce15",
      "End": "a51fc86abdee4625925aaaafc2a2cb6e",
      "Id": "ba9c2f5ce392436daff0756ab673fc0e",
      "IsHidden": "False"
    },
    {
      "Start": "ab93d1a3868e482797b23672737d01e9",
      "End": "ed2556a7855f465ebdd57110c2836c0b",
      "Id": "965d138ac25d46a28d45463c4b09fb60",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.19",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.1",
      "Data": {}
    }
  ],
  "Author": "Goncalo Bastos",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.19.3.6394",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "76bbb51a199646d6bf367742bf34d2ac",
        "Name": "Imported DWG's",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1102.5758520282454,
        "Y": -1896.743989231428
      },
      {
        "Id": "7ea8a1d09d2b4018a430f588b5d5b413",
        "Name": "DWG's importados",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 661.28551944762376,
        "Y": -1810.0625590324285
      },
      {
        "Id": "496931820af84a2db7f41ad454c6a3ac",
        "Name": "Element.Delete",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -110.73281973488514,
        "Y": -1401.6505266470626
      },
      {
        "Id": "5ccd2ec12d9a4bf6b23477f5ab34ab51",
        "Name": "Apagar DWG's importados?",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1516.1172443365692,
        "Y": -1572.6180726812829
      },
      {
        "Id": "e8f383eb52c5481290afc4abf81ac8d5",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -403.73281973488514,
        "Y": -1558.6505266470626
      },
      {
        "Id": "9c0cbe02ca424b6ab854b640164f28ba",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -808.57585202824544,
        "Y": -1896.743989231428
      },
      {
        "Id": "9f64a2c08709444e95079ac4622d7e94",
        "Name": "Function Apply",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 193.26718026511486,
        "Y": -1488.8917766470627
      },
      {
        "Id": "d9a4a14b31954396b999e51fa7a71a50",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -378.57918614502478,
        "Y": -1770.8113673321727
      },
      {
        "Id": "c3eabd768e964bd5ab782c2b92ee6d1b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -110.73281973488514,
        "Y": -1558.6505266470626
      },
      {
        "Id": "d79749d0b70d4646af42526d70571c1d",
        "Name": "DWG's removidos",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 676.73730401955606,
        "Y": -1460.9791670845484
      }
    ],
    "Annotations": [
      {
        "Id": "ddae6f6e26534393bab949f988c3e9ea",
        "Title": "Description",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7b73034f8b1a4ea2b9c2478a092c96d1"
        ],
        "HasNestedGroups": false,
        "Left": -1921.0439033803134,
        "Top": -1704.14616325035,
        "Width": 316.0,
        "Height": 295.0,
        "FontSize": 36.0,
        "GroupStyleId": "bc688959-ce34-4bf5-90f8-6ddd23f80989",
        "InitialTop": -1631.14616325035,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "84da1bfe76e34a0192fbf4a5a8904efb",
        "Title": "Input",
        "DescriptionText": "Opção de apagar os DWG's importados.\r\nTrue: Apaga\r\nFalse: Não apaga",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5ccd2ec12d9a4bf6b23477f5ab34ab51"
        ],
        "HasNestedGroups": false,
        "Left": -1526.1172443365692,
        "Top": -1668.6180726812829,
        "Width": 295.0,
        "Height": 228.0,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -1572.6180726812829,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "91e5fedf1f6f4c68aa6a5943efa4e1d3",
        "Title": "DWG's importados",
        "DescriptionText": "Nó desenvolvido em Python para obter todos os DWG's importados.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "76bbb51a199646d6bf367742bf34d2ac",
          "9c0cbe02ca424b6ab854b640164f28ba"
        ],
        "HasNestedGroups": false,
        "Left": -1112.5758520282454,
        "Top": -1969.743989231428,
        "Width": 522.0,
        "Height": 231.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -1896.743989231428,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "2e98b841aed04c70a1634b75d4903258",
        "Title": "Identifica/apaga as instâncias importadas",
        "DescriptionText": "Caso o utilizador decida apagar, os CAD's serão removidos; caso contrário, o programa indica quais os CAD's importados.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "496931820af84a2db7f41ad454c6a3ac",
          "e8f383eb52c5481290afc4abf81ac8d5",
          "9f64a2c08709444e95079ac4622d7e94",
          "d9a4a14b31954396b999e51fa7a71a50",
          "c3eabd768e964bd5ab782c2b92ee6d1b"
        ],
        "HasNestedGroups": false,
        "Left": -413.73281973488514,
        "Top": -1843.8113673321727,
        "Width": 822.0,
        "Height": 574.16084068511009,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -1770.8113673321727,
        "InitialHeight": 514.16084068511009,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "e6483b4278cd4a52b47415109d60f741",
        "Title": "Output",
        "DescriptionText": "Output do programa",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7ea8a1d09d2b4018a430f588b5d5b413",
          "d79749d0b70d4646af42526d70571c1d"
        ],
        "HasNestedGroups": false,
        "Left": 651.28551944762376,
        "Top": -1883.0625590324285,
        "Width": 312.45178457193231,
        "Height": 558.08339194788,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -1810.0625590324285,
        "InitialHeight": 494.08339194788005,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "7b73034f8b1a4ea2b9c2478a092c96d1",
        "Title": "Nome da rotina: TD-Clean-Imported-DWGs\nVersão: 1.0\nData: 02/09/2024\nElaborou: GGB\n\nDescrição:\nIdentifica todos os CAD's importados no modelo. O utilizador tem a opção de os apagar caso o indique nos INPUT's.\n\n\nPackages usados:\n•   Esta rotina não usa packages externos.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1911.0439033803134,
        "Top": -1623.14616325035,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1033.9583711168625,
    "Y": 1276.6656930779732,
    "Zoom": 0.52534552939418611
  }
}